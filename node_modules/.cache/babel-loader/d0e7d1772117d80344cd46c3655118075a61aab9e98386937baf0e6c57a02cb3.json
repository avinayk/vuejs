{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createBlock(_component_router_view);\n}","map":{"version":3,"names":["_createBlock","_component_router_view"],"sources":["/opt/lampp/htdocs/projects/vuejs/src/App.vue"],"sourcesContent":["<template>\n<router-view></router-view>\n \n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      names: [\"Hi\", \"Test\", \"Hello\"],\n      multimes: [\n        { name: \"Rk Verma\", email: \"rk@gmail.com\", phone: \"1325432546\" },\n      ],\n      uname: \"\",\n      uemail: \"\",\n      ugender: \"\",\n      formSubmitted: false,\n      message: \"Submission Successfully! Please Login\",\n      showSuccessMessage: false,\n    };\n  },\n  methods: {\n    submitForm() {\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: this.uname,\n          email: this.uemail,\n          password: this.password,\n          address: this.address,\n          city: this.city,\n          state: this.state,\n        }),\n      };\n      axios\n        .post(\"http://localhost/projects/vuejs/form.php\", requestOptions)\n        .then((response) => {\n          console.log(response);\n          this.uname = \"\";\n          this.uemail = \"\";\n          this.password = \"\";\n          this.address = \"\";\n          this.city = \"\";\n          this.state = \"\";\n          this.showSuccessMessage = true;\n          setTimeout(() => {\n            this.showSuccessMessage = false;\n          }, 3500); // 2000 milliseconds = 2 seconds\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nform {\n  padding: 10px;\n  border: 2px solid black;\n  border-radius: 5px;\n}\n\ninput {\n  padding: 4px 8px;\n  margin: 4px;\n}\n\nspan {\n  font-size: 18px;\n  margin: 4px;\n  font-weight: 500;\n}\n\n.submit {\n  font-size: 15px;\n  color: #fff;\n  background: #222;\n  padding: 6px 12px;\n  border: none;\n  margin-top: 8px;\n  cursor: pointer;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":";;;uBACAA,YAAA,CAA2BC,sBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}